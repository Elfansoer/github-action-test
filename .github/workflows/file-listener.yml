name: Listener
run-name: A listener by @${{ github.actor }}
on:
  push:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 0 * * *'

jobs:
  my_first_job:
    name: My first job
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
            path: 'repo'

      - name: Install Lua/LuaJIT
        # You may pin to the exact commit or the version.
        # uses: leafo/gh-actions-lua@d84e7d61946edb679210088bc1378c099fde51fe
        uses: leafo/gh-actions-lua@v9.1.0
        with:
          # The version of Lua to install, must be available on https://www.lua.org/ftp/ or http://luajit.org/download.html
          luaVersion: 5.1

      - name: See the workspace
        run: ls

      - name: Try cd the workspace repo
        run: |
          cd repo
          ls

      - name: Try lua command
        run: lua


#       - name: Fetch release version
#         run: |
#           curl -sL https://api.github.com/repos/SteamDatabase/GameTracking-Dota2/commits?PATH=game/dota/pak01_dir/scripts/items/items_game.txt | \
#           jq -r ".[0] | .sha" > test.txt

#       - name: Check for modified files
#         id: git-check
#         run: echo modified=$([ -z "`git status --porcelain`" ] && echo "false" || echo "true") >> $GITHUB_OUTPUT

#       - name: Show status
#         run: echo Comparison is ${{ steps.git-check.outputs.modified }}, result in boolean X${{steps.git-check.outputs.modified=='true'}}X X${{contains(steps.git-check.outputs.modified,'true')}}X

#       - name: Download the file
#         if: ${{ steps.git-check.outputs.modified == 'true' }} 
#         run: |
#           curl -sL https://raw.githubusercontent.com/SteamDatabase/GameTracking-Dota2/master/game/dota/pak01_dir/scripts/items/items_game.txt > items_game.txt

#       - name: Commit latest release version
#         if: ${{ steps.git-check.outputs.modified == 'true' }} 
#         run: |
#           git config --global user.name 'Test'
#           git config --global user.email 'test-email@users.noreply.github.com'
#           git commit -am "autoupdate at $(date +%Y-%m-%d-%H:%M)"
#           git push



#   my_second_job:
#     name: My second job
#     needs: my_first_job

#   test_schedule:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Not on Monday or Wednesday
#         if: github.event.schedule != '30 5 * * 1,3'
#         run: echo "This step will be skipped on Monday and Wednesday"
#       - name: Every time
#         run: echo "This step will always run"
